<%#
  This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
  calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").

  The link variable is set to a proc that returns the link tag.
  Usage: link.call( page_number [, text [, extra_attributes_string ]])

  @pagy example
  #<Pagy:0x007f886325d080 
    @vars={
      :page=>"2", 
      :items=>5, 
      :outset=>0, 
      :size=>[], 
      :page_param=>:page, 
      :params=>{}, 
      :anchor=>"", 
      :link_extra=>"", 
      :i18n_key=>"pagy.item_name", 
      :cycle=>false, 
      :count=>7
    }, 
    @count=7, 
    @items=2, 
    @outset=0, 
    @page=2, 
    @last=2, 
    @pages=2, 
    @offset=5, 
    @from=6, 
    @to=7, 
    @prev=1, 
    @next=nil
  >
-%>
<% link = pagy_link_proc(pagy) -%>
<%#                            -%><nav aria-label="pager" class="pagy_nav pagination leading-none font-extrabold flex justify-end text-3xl text-purple-700" role="navigation">
<% if pagy.prev                -%>  <span class="page prev mr-3"><%== link.call(pagy.prev, '‹', 'aria-label="previous"') %></span>
<% else                        -%>  <span class="page prev mr-3 text-gray-400 disabled"><%== '‹' %></span>
<% end                         -%>
<% pagy.series.each do |item| # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36] -%>
<%   if    item.is_a?(Integer) -%>  <span class="page"><%== link.call(item) %></span>
<%   elsif item.is_a?(String)  -%>  <span class="page current"><%= item %></span>
<%   elsif item == :gap        -%>  <span class="page gap"><%== pagy_t('pagy.nav.gap') %></span>
<%   end                       -%>
<% end                         -%>
<% if pagy.next                -%>  <span class="page next"><%== link.call(pagy.next, '›', 'aria-label="next"') %></span>
<% else                        -%>  <span class="page next text-gray-400 disabled"><%== '›' %></span>
<% end                         -%>
<%#                            -%></nav>